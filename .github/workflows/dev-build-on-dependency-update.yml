name: Scheduled check and build on dependency updates

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    # Run Hourly
    - cron: '0 * * * *'
  workflow_dispatch:
  
jobs:
  check_release:
    runs-on: ubuntu-latest
    name: Hourly check for dependency updates

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Setup git
      run: |
          git config --global user.email "gh@pkimet.al"
          git config --global user.name "pkimetal"

    - name: Fetch all branches
      run: git fetch origin

    - name: Run dev_update_dependencies.sh
      run: chmod +x dev_update_dependencies.sh; ./dev_update_dependencies.sh

    - name: Check for changes
      id: check_changes
      run: |
        git fetch origin main
        if [[ $(git diff --name-only origin/main | grep 'dev_go.mod' ) ]]; then
          echo "dev_go.mod has changed"
          echo "dev_files_changed=true" >> $GITHUB_ENV
        else
          echo "dev_go.mod has not changed"
          echo "dev_files_changed=false" >> $GITHUB_ENV
        fi

    - name: Create auto-dev-update branch
      if: env.dev_files_changed == 'true'
      run: |
          git checkout -b auto-dev-update
          git push origin -u auto-dev-update

    - name: Create Pull Request
      if: env.dev_files_changed == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        add-paths: |
          dev_go.*
        token: ${{ secrets.GITHUB_TOKEN }}
        base: main
        branch: auto-dev-update
        title: "Dependency Update"
        body: "This pull request was automatically created due to a dependency update."
        commit-message: Dependency update

    - name: Authenticate GitHub CLI
      if: env.dev_files_changed == 'true'
      run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
        
    - name: Auto-Merge PR
      if: env.dev_files_changed == 'true'
      run: |
          gh pr merge -d -m

    - name: Trigger Dev Container Build
      if: env.dev_files_changed == 'true'
      run: |
        curl -X POST \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/pkimetal/pkimetal/actions/workflows/docker-dev.yml/dispatches \
        -d '{"ref":"main"}'

